name: deploy-test

on: [push, pull_request]

env:
  HARBOR_PROJECT: metrics-agent
  DIR_PATH: snapshots

jobs:
  deploy-test:
    name: Build and Push Test Image
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set ENV Vars
        run: |
          EPOCH=$(date '+%s')
          echo "EPOCH=${EPOCH}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_SHA:0:8}-${EPOCH}" >> $GITHUB_ENV
          echo "TMPDIR=$(mktemp -d /tmp/metrics-agent.XXXXXXXX)" >> $GITHUB_ENV
      - uses: actions/setup-go@v2
        with:
          go-version: 1.19.x

      - name: Go build
        run: |
          mkdir temp-akp
          GOOS=linux CGO_ENABLED=0 go build -ldflags "-X main.Time=`date -u +'%Y-%m-%dT%H:%M:%SZ'` -X main.Version=${{ env.VERSION }}"
          cp metrics-agent temp-akp/
      - uses: actions/setup-node@v2
        with:
          node-version: '14'


      - name: Build
        run: |
          cp -R . "${TMPDIR}"
          docker build -f deploy/docker/Dockerfile --network=host -t ${{ secrets.REGISTRY_URL }}/${HARBOR_PROJECT}/metrics-agent/${DIR_PATH}/metrics-agent:${VERSION} --build-arg AKP=true "${TMPDIR}"
          rm -rf "${TMPDIR}"
          rm -rf temp-akp
          docker image list
      - name: Harbor Login
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_TOKEN }}
      - name: Push to Harbor
        run: |
          docker push ${{ secrets.REGISTRY_URL }}/${HARBOR_PROJECT}/metrics-agent/${DIR_PATH}/metrics-agent:${VERSION}

  slackFinish:
    name: Notify Finish
    needs: deploy-test
    runs-on: ubuntu-22.04
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: 8398a7/action-slack@v3
        with:
          fields: repo,message,commit,author,action,eventName,ref,workflow
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}


